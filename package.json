{
  "name": "copilot-prompt-logger",
  "displayName": "copilot-prompt-logger",
  "description": "Log GitHub Copilot prompts to a Markdown file",
  "version": "0.0.1",
  "publisher": "vscode-user",
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "*"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "copilot-prompt-logger.enableLogging",
        "title": "Enable Copilot Prompt Logging"
      },
      {
        "command": "copilot-prompt-logger.disableLogging",
        "title": "Disable Copilot Prompt Logging"
      },
      {
        "command": "copilot-prompt-logger.openLogFile",
        "title": "Open Copilot Prompts Log File"
      },
      {
        "command": "copilot-prompt-logger.logPrompt",
        "title": "Log Copilot Prompt"
      },
      {
        "command": "copilot-prompt-logger.checkLogPath",
        "title": "Debug: Check Copilot Logger Path"
      },
      {
        "command": "copilot-prompt-logger.logUserPrompt",
        "title": "Log User Prompt to Copilot"
      },
      {
        "command": "copilot-prompt-logger.captureFromClipboard",
        "title": "Capture Prompt from Clipboard"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "copilot-prompt-logger.captureView",
          "name": "Copilot Prompt Capture",
          "type": "webview"
        }
      ]
    },
    "configuration": {
      "title": "Copilot Prompt Logger",
      "properties": {
        "copilotPromptLogger.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable Copilot prompt logging"
        },
        "copilotPromptLogger.logFilePath": {
          "type": "string",
          "default": "copilot-prompts.md",
          "description": "Path to the Copilot prompts log file (relative to workspace root)"
        },
        "copilotPromptLogger.timestampFormat": {
          "type": "string",
          "default": "YYYY-MM-DD HH:mm:ss",
          "description": "Format for timestamps in the log file"
        },
        "copilotPromptLogger.includeContextLines": {
          "type": "number",
          "default": 5,
          "description": "Number of code context lines to include in the log"
        },
        "copilotPromptLogger.captureMode": {
          "type": "string",
          "enum": [
            "userInputOnly",
            "inputAndResponse",
            "all"
          ],
          "default": "inputAndResponse",
          "description": "Control what content to capture from Copilot interactions"
        },
        "copilotPromptLogger.filterSystemMessages": {
          "type": "boolean",
          "default": true,
          "description": "Filter out system messages and processing logs"
        },
        "copilotPromptLogger.includeContext": {
          "type": "boolean",
          "default": false,
          "description": "Whether to include context in logs"
        },
        "copilotPromptLogger.useDateBasedNaming": {
          "type": "boolean",
          "default": true,
          "description": "Use date-based log file naming (prompt-log-YYYY-MM-DD.md)"
        },
        "copilotPromptLogger.debugMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging for troubleshooting file operations"
        },
        "copilotPromptLogger.alternateLogLocation": {
          "type": "string",
          "default": "",
          "description": "Alternative location for log files if workspace location has issues"
        },
        "copilotPromptLogger.minimalLogging": {
          "type": "boolean",
          "default": true,
          "description": "Use minimal format in logs (only prompt and filename)"
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "command": "copilot-prompt-logger.logPrompt",
          "group": "z_commands",
          "when": "editorTextFocus"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --fix",
    "test": "jest"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/jest": "^29.5.14",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "jest": "^29.7.0",
    "sinon": "^20.0.0",
    "ts-jest": "^29.3.2",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.3",
    "webpack": "^5.99.7",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "moment": "^2.30.1"
  }
}